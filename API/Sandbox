--[[
	Sandbox 
	environment
	by Creator
	for TheOS
]]--

--Variables--
local CustomEnvironement = {}
local oldGetfenv = getfenv
local oldLoadfile = loadfile
--Functions--

function newEnv(permission)
	if permission == "admin" then
		return "global"
	else
		return "custom" , customEnv()
	end
end

local function customEnv()
	return CustomEnvironement = {
		redstone = redstone,
		gps = gps,
		_VERSION = _VERSION,
		keys = keys,
		printError = printError,
		peripheral = peripheral,
		assert = assert,
		getfenv = function(a)
			if type(a) == "number" then
				oldGetfenv(1)
			elseif type(a) == "function" then
				oldGetfenv(a)
			else
				error("Expected function or number, got "..type(a))
			end,
		bit = bit,
		rawset = rawset,
		tonumber = tonumber,
		loadstring = loadstring,
		error = error,
		tostring = tostring,
		type = type,
		coroutine = { 
			create = coroutine.create,
			resume = coroutine.resume,
			running = coroutine.running,
			status = coroutine.status,
			wrap = coroutine.wrap,
		},
		disk = disk,
		window = window,
		next = next,
		unpack = unpack,
		colours = colours,
		pcall = pcall,
		sleep = sleep,
		loadfile = function(a) 
			local func = oldLoadfile(a)
			setfenv(func,getfenv(1))
			end,
		math = math,
		pairs = pairs,
		fs = {
			combine = fs.combine,
			isReadOnly = fs.isReadOnly,
			getSize = fs.getSize,
			move = 
			exists
			copy
			getFreeSpace
			makeDir
			find
			getDir
			delete
			open
			list
			getDrive
			getName
			isDir
		},
		rawget 
		_G 
		__inext 
		read 
		rednet 
		ipairs 
		xpcall 
		os 
		help 
		io 
		rawequal 
		setfenv 
		rs 
		http 
		write 
		string 
		setmetatable 
		print 
		getmetatable 
		table 
		parallel 
		dofile 
		textutils 
		term 
		colors 
		vector 
		select 
		paintutils 
	},
end