--[[
	Desktop in ComputerCraft
	by Creator
	for TheOS
]]--
--Variables--
local textutilsserialize = textutils.serialize
local textutilsunserialize = textutils.unserialize
local w,h = term.getSize()
local Settings = {}
local result = {}
local Main = {}
local QuickSettings = {}

--Functions--
local function readFile(_path)
	local file = fs.open(_path,"r")
	local data = file.readAll()
	file.close()
	return data
end

local function split(str,sep)
	local buffer = {}
	for token in str:gmatch(sep) do
		buffer[#buffer+1] = token
	end
	return buffer
end

--Loading settings--
local buffer = readFile("TheOS/Desktop/Settings")
Settings = textutils.unserialize( buffer )

--Object table--
Main.ButtonTable = {
	quickSettings = {
		name = "quickSettings",
		label = "^",
		xPos = 1,
		yPos = h,
		xLength = 1,
		yLength = 1,
		xTextPos = 1,
		yTextPos = 1,
		fgColor = colors.white,
		bgColor = Settings.bgColor,
		returnValue = "quickSettings",
	},
	windowPlus = {
		name = "windowPlus",
		label = ">",
		xPos = w,
		yPos = 1,
		xLength = 1,
		yLength = 1,
		xTextPos = 1,
		yTextPos = 1,
		fgColor = colors.white,
		bgColor = Settings.bgColor,
		returnValue = "windowPlus",
	},
	windowMinus = {
		name = "windowMinus",
		label = "<",
		xPos = 1,
		yPos = 1,
		xLength = 1,
		yLength = 1,
		xTextPos = 1,
		yTextPos = 1,
		fgColor = colors.white,
		bgColor = Settings.bgColor,
		returnValue = "windowMinus",
	},
}

QuickSettings.ButtonTable = {
	Close = {
		name = "Close",
		label = "Close",
		xPos = w-4,
		yPos = h-7,
		xLength = 5,
		yLength = 1,
		xTextPos = 1,
		yTextPos = 1,
		fgColor = colors.black,
		bgColor = colors.white,
		returnValue = "Close",
	},
	Right = {
		name = "Right",
		label = ">",
		xPos = w-1,
		yPos = h-4,
		xLength = 1,
		yLength = 3,
		xTextPos = 1,
		yTextPos = 2,
		fgColor = Settings.bgColor,
		bgColor = colors.white,
		returnValue = "Right",
	},
	Left = {
		name = "Left",
		label = "<",
		xPos = 2,
		yPos = h-4,
		xLength = 1,
		yLength = 3,
		xTextPos = 1,
		yTextPos = 2,
		fgColor = Settings.bgColor,
		bgColor = colors.white,
		returnValue = "Left",
	}
}

QuickSettings.ColorFieldTable = {
	TopBar = {
		name = "TopBar",
		xMin = 1,
		yMin = h-7,
		xMax = w,
		yMax = h-7,
		color = colors.white,
	}
}

QuickSettings.BetterPaint = {
	Restart = {
		xPos = 4,
		yPos = h - 5,
		name = "restart",
		path = "TheOS/Desktop/QuickSettings/restart.ico",
	},
}

--Initializing GUI components
local gui = Interact.Initialize()
local mainLayout = gui.Layout.new({xMin = 1,yMin = 1,xMax = w,yMax = h})
local quickSettingsLayout = gui.Layout.new({xMin = 1,yMin = h-7,xMax = w,yMax = h})

--Initializing Buttons--
--Main--
local mainLayoutTable = {}
mainLayoutTable.Button = {}
for i,v in pairs(Main.ButtonTable) do
	mainLayoutTable.Button[i] = gui.Button.new(Main.ButtonTable[i])
end
mainLayoutTable.mainBgColor = gui.BackgroundColor.new({color = Settings.bgColor})

--QuickSettings--
local quickSettingsLayoutTable = {}
quickSettingsLayoutTable.Button = {}
for i,v in pairs(QuickSettings.ButtonTable) do
	quickSettingsLayoutTable.Button[i] = gui.Button.new(QuickSettings.ButtonTable[i])
end
quickSettingsLayoutTable.quickSettingsBgColor = gui.BackgroundColor.new({color = colors.lightGray})
quickSettingsLayoutTable.TopBar = gui.ColorField.new(QuickSettings.ColorFieldTable.TopBar)
quickSettingsLayoutTable.Restart = gui.BetterPaint.new(QuickSettings.BetterPaint.Restart)

--Initializing structures--
--Main--
for i,v in pairs(mainLayoutTable.Button) do
	mainLayout:addButton(mainLayoutTable.Button[i]:returnData())
end
mainLayout:addBackgroundColor(mainLayoutTable.mainBgColor:returnData())
--mainLayout:addBetterPaint(quickSettingsLayoutTable.Restart)

--QuickSettings--
for i,v in pairs(quickSettingsLayoutTable.Button) do
	quickSettingsLayout:addButton(quickSettingsLayoutTable.Button[i]:returnData())
end
quickSettingsLayout:addBackgroundColor(quickSettingsLayoutTable.quickSettingsBgColor:returnData())
quickSettingsLayout:addColorField(quickSettingsLayoutTable.TopBar:returnData())
quickSettingsLayout:addBetterPaint(quickSettingsLayoutTable.Restart)


function writeTable()
	file = fs.open("TheOS/Desktop/Settings","w")
	file.write(textutilsserialize({
		bgColor = colors.blue,
	}))
	file.close()
end
--writeTable()

--Code--
while true do
	mainLayout:draw()
	--paint.drawImage( "TheOS/Desktop/QuickSettings/restart.ico",2,1)
	local resultRaw = gui.eventHandler(mainLayout)
	result = split(resultRaw,"[^:]+")
	if result[1] == "Button" then
		if result[2] == "quickSettings" then
			quickSettingsLayout:draw()
			gui.eventHandler(quickSettingsLayout)
		end
	end
end