local function readFile(_path)
	local file = fs.open(_path,"r")
	local data = file.readAll()
	file.close()
	return data
end

local w,h = term.getSize()

local buffer = readFile(programPath.."Settings")
Settings = textutils.unserialize( buffer )

local buffer = readFile(programPath.."MatchingColors")
MatchingColors = textutilsunserialize(buffer)

local buffer = readFile(programPath.."Settings")
Settings = textutils.unserialize( buffer )

local buffer = readFile(programPath.."MatchingColors")
MatchingColors = textutilsunserialize(buffer)


local function loadShortcuts()
	local buffer = readFile(programPath.."Shortcuts")
	local sBuffer = textutilsunserialize(buffer)
	local nBuffer = {}
	paths = {}
	for i,v in pairs(sBuffer) do
		nBuffer[v.name] = {
			xPos = 2+(6*(v.xPos-1)),
			yPos = 1+(5*(v.yPos-1)),
			name = v.name,
			path = v.path..".ico",
			yLength = 4,
			xLength = 3,
			returnValue = v.name,
			label = string.sub(v.name,1,5),
			labelFg = MatchingColors[Settings.bgColor]["mainButtons"],
			labelBg = Settings.bgColor,
			moveY = true,
		}
		paths[v.name] = v.path
	end
	Main.BetterPaint = nBuffer
end

Main = {
	xPos = 1,
	yPos = 1,
	xLength = w,
	yLength = h,
}

Main.Button = {
		quickSettings = {
			name = "quickSettings",
			label = "^",
			xPos = 1,
			yPos = h,
			xLength = 1,
			yLength = 1,
			xTextPos = 1,
			yTextPos = 1,
			fgColor = MatchingColors[Settings.bgColor]["mainButtons"],
			bgColor = Settings.bgColor,
			returnValue = "quickSettings",
		},
		windowPlus = {
			name = "windowPlus",
			label = ">",
			xPos = w,
			yPos = 1,
			xLength = 1,
			yLength = 1,
			xTextPos = 1,
			yTextPos = 1,
			fgColor = MatchingColors[Settings.bgColor]["mainButtons"],
			bgColor = Settings.bgColor,
			returnValue = "windowPlus",
		},
		windowMinus = {
			name = "windowMinus",
			label = "<",
			xPos = 1,
			yPos = 1,
			xLength = 1,
			yLength = 1,
			xTextPos = 1,
			yTextPos = 1,
			fgColor = MatchingColors[Settings.bgColor]["mainButtons"],
			bgColor = Settings.bgColor,
			returnValue = "windowMinus",
		},
	}